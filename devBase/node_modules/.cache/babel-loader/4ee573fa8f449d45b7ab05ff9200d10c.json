{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nexports.default = function () {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (Element) {\n    return function (_Component) {\n      _inherits(DelayRender, _Component);\n\n      function DelayRender() {\n        _classCallCheck(this, DelayRender);\n\n        var _this = _possibleConstructorReturn(this, (DelayRender.__proto__ || Object.getPrototypeOf(DelayRender)).call(this));\n\n        _this.state = {\n          ready: true\n        };\n        return _this;\n      }\n\n      _createClass(DelayRender, [{\n        key: 'componentWillMount',\n        value: function componentWillMount() {\n          var _this2 = this;\n\n          var delay = args.delay,\n              onRender = args.onRender;\n          var d = parseInt(delay, 10);\n\n          if (d && d > 0) {\n            this.setState({\n              ready: false\n            });\n            this.timeout = setTimeout(function () {\n              _this2.setState({\n                ready: true\n              });\n\n              if (onRender && typeof onRender === 'function') {\n                onRender();\n              }\n            }, delay);\n          } else {\n            this.setState({\n              ready: true\n            });\n          }\n        }\n      }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n          if (this.timeout) {\n            clearTimeout(this.timeout);\n          }\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          if (this.state.ready) {\n            return _react2.default.createElement(Element, Element.props);\n          }\n\n          return null;\n        }\n      }]);\n\n      return DelayRender;\n    }(_react.Component);\n  };\n};","map":null,"metadata":{},"sourceType":"script"}